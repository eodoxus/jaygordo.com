<?php

function api_menu() {
  $items['api/game_saves'] = array(
    'page callback' => 'api_game_saves',
    'access arguments' => array('access content'),
    'file' => 'api_game_saves.inc',
  );
  $items['api/photos'] = array(
    'page callback' => 'api_get_photos',
    'access arguments' => array('access content'),
    'file' => 'api_photos.inc',
	);
	$items['api/projects'] = array(
    'page callback' => 'api_get_projects',
    'access arguments' => array('access content'),
    'file' => 'api_projects.inc',
  );
  $items['api/site'] = array(
    'page callback' => 'api_get_site',
    'access arguments' => array('access content'),
    'file' => 'api_site.inc',
	);
	return $items;
}

function api_resond($response) {
	drupal_set_header('Content-Type: application/json');
  drupal_set_header('Access-Control-Allow-Origin: *');
  drupal_set_header('Access-Control-Allow-Headers: *');
	die(json_encode($response));
}

function api_get_post_data() {
  $input = json_decode(file_get_contents('php://input'));
  if ($input) {
    return json_decode($input);
  }
}

function api_validate_list_input() {
	$page = isset($_GET['page']) ? $_GET['page'] : 0;
	if ( ! is_numeric($page)) {
		api_error_response(400, 'page parameter must be an integer');
	}
	$limit = isset($_GET['limit']) ? $_GET['limit'] : 20;
	if ( ! is_numeric($page)) {
		api_error_response(400, 'limit parameter must be an integer');
	}
	return (object)array('page' => $page, 'limit' => $limit);
}

function api_get_view_results($view_name, $display_id = NULL, $page, $items_per_page) {
	$view = views_get_view($view_name);
	if (is_string($display_id)) {
      $view->set_display($display_id);
    }
	$view->set_use_pager(true);
	$view->set_current_page($page);
	$view->set_items_per_page($items_per_page);
	$view->execute();

	$results = array();
	foreach ($view->result as $item) {
		$node = node_load($item->nid);
		$results[] = api_transform_node($node);
	}
	return $results;
}

function api_transform_node($node) {
	$date_format = 'Y/m/d h:i:s';

	switch($view_name) {
		case 'projects':
			break;
		case 'photos':
			break;
	}

	$result = (object)array(
		'nid' => $node->nid,
		'link' => url('node/'.$node->nid),
		'title' => $node->title,
		'description' => $node->body,
		'teaser' => $node->teaser,
		'created' => date($date_format, $node->created),
	);

	switch ($node->type) {
		case 'project':
			$result->date = date($date_format, strtotime($node->field_date[0]['value']));
			$result->url = $node->field_url[0]['url'];
			$result->images = array();
			foreach ($node->field_images as $img) {
				$result->images[] = array(
					'fid' => $img['fid'],
					'name' => $img['filename'],
					'path' => $img['filepath'],
				);
			}
			break;
	}

	return $result;
}

function api_error_response($code, $msg) {
	switch($code) {
		case 400:
			drupal_set_header('HTTP/1.1 400 Bad Request');
			break;
		case 404:
			drupal_set_header('HTTP/1.1 404 Not Found');
			break;
		default:
			drupal_set_header('HTTP/1.1 500 Internal Server Error');
	}

	die(json_encode(array('msg' => $msg)));
}
